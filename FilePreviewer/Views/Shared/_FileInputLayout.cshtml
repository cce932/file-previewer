@{
    var ActionName = ViewContext.RouteData.Values["action"].ToString();
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - 我的 ASP.NET 應用程式</title>
    <!-- bootstrap 5.x and 4.x is supported. You can also use the bootstrap css 3.3.x versions -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.6.0/css/bootstrap.min.css">
    <link href="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.2.0/css/fileinput.min.css" media="all" rel="stylesheet" type="text/css" />
    <!-- if using RTL (Right-To-Left) orientation, load the RTL CSS file after fileinput.css by uncommenting below -->
    <!-- link href="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.2.0/css/fileinput-rtl.min.css" media="all" rel="stylesheet" type="text/css" /-->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <!-- piexif.min.js is needed for auto orienting image files OR when restoring exif data in resized images and when you
        wish to resize images before upload. This must be loaded before fileinput.min.js -->
    <script src="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.2.0/js/plugins/piexif.min.js" type="text/javascript"></script>
    <!-- sortable.min.js is only needed if you wish to sort / rearrange files in initial preview.
        This must be loaded before fileinput.min.js -->
    <script src="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.2.0/js/plugins/sortable.min.js" type="text/javascript"></script>
    <!-- popper.min.js below is needed if you use bootstrap 4.x. You can also use the bootstrap js
       3.3.x versions without popper.min.js. -->
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <!-- bootstrap.min.js below is needed if you wish to zoom and preview file content in a detail modal
        dialog. Bootstrap 5.x and 4.x is supported. You can also use the 3.3.x versions. -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- the main fileinput plugin file -->
    <script src="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.2.0/js/fileinput.min.js"></script>
    <!-- optionally if you need a theme like font awesome theme you can include it as mentioned below -->
    <script src="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.2.0/themes/fa/theme.js"></script>
    <!-- optionally if you need translation for your language then include  locale file as mentioned below (replace LANG.js with your locale file) -->
    <script src="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.2.0/js/locales/LANG.js"></script>

    @Styles.Render("~/Content/css")
    @*@Scripts.Render("~/bundles/jquery")*@
    <script src="https://kit.fontawesome.com/a9d212ab10.js" crossorigin="anonymous"></script>
</head>
<body>
    <div class="wrapper">
        <div id="sidebar" class="sidebar">
            <ul id="sidebar-list" class="sidebar-list">
                <li id="sidebar-brand" class="sidebar-brand">
                    <a>
                        BOOTSTRAP-FILEINPUT
                        <i class=" fas fa-bars sub-icon"></i>
                    </a>
                </li>
                <li class="list-item">
                    <a>
                        — Top —
                        <i class="fas fa-arrow-circle-up sub-icon"></i>
                    </a>
                </li>
                @if (ActionName == "Index")
                {
                    foreach (var sidebarItem in ViewBag.SidebarItems)
                    {
                        <li class="list-item">
                            <a href=@Url.Action(sidebarItem.Key,"FileInput")>
                                @sidebarItem.Value
                                <i class="fas fa-play-circle sub-icon"></i>
                            </a>
                        </li>
                    }
                }
                else
                {
                    if (ActionName == "Ajax")
                    {
                        foreach (var sidebarItem in ViewBag.SidebarItems)
                        {
                            <li class="list-item">
                                <a href=@Url.Action(ActionName,"FileInput", new { id = sidebarItem.Key})>
                                    @sidebarItem.Value
                                    <i class="fas fa-play-circle sub-icon"></i>
                                </a>
                            </li>
                        }
                    }
                    else
                    {
                        foreach (var sidebarItem in ViewBag.SidebarItems)
                        {
                            <li class="list-item">
                                <a href=@("#" + sidebarItem.Key)>
                                    @sidebarItem.Value
                                    <i class="fas fa-play-circle sub-icon"></i>
                                </a>
                            </li>
                        }
                    }
                }
                <li class="list-item">
                    <a>
                        Comment & Discussion
                        <i class="fas fa-comment sub-icon"></i>
                    </a>
                </li>
                <li class="list-item">
                    <a>
                        — Bottom —
                        <i class="fas fa-arrow-circle-down sub-icon"></i>
                    </a>
                </li>
            </ul>
        </div>
        <div id="content" class="content">
            @RenderBody()
        </div>
        </div>

        @Scripts.Render("~/bundles/demo")
</body>
</html>